---
import { getCollection } from "astro:content";

import { renderComment } from "@myriaddreamin/tylant";

import RecentComment from "virtual:tylant/components/RecentComment";
import { BaseHead, Footer, Header, Prelude } from "$components";
import { kUrlBase, kSiteTitle, kSiteDescription, kCommentList } from "$consts";
import { getPostLocaleInfo } from "$components/locale";

export async function getStaticPaths() {
  return ["zh", "en"].map((lang) => ({
    params: { lang },
  }));
}

import "$styles/IndexPostList.css";

const lang = Astro.currentLocale || "en";
const canonical = Astro.url.pathname.replace(/\/(zh|en)\//, "/");

const posts = (await getCollection("blog")).map((post) => {
  return {
    id: post.id,
    data: getPostLocaleInfo(post.id)?.data(lang) || post.data,
  };
});
---

<!doctype html>
<html lang={lang}>
  <head>
    <BaseHead
      title={kSiteTitle}
      canonical={canonical}
      description={kSiteDescription}
    />
    <style>
      @media (max-width: 600px) {
        .heading {
          display: flex;
          flex-direction: column;
        }
      }
      main {
        padding: 0em 1em;
      }
    </style>
  </head>
  <body>
    <Header breadcrumbs="Comments" />
    <Prelude />
    <main>
      <RecentComment kCommentList={kCommentList} renderComment={renderComment}>
        <fragment slot="articleRef">
          {
            (id: string) => (
              <a class="heading" href={`${kUrlBase}/${lang}/article/${id}`}>
                {posts.find((post) => post.id === id)?.data.title || ""}
              </a>
            )
          }
        </fragment>
      </RecentComment>
    </main>
    <Footer />
  </body>
</html>
